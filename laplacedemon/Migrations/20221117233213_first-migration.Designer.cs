// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using laplacedemon.Data;

#nullable disable

namespace laplacedemon.Migrations
{
    [DbContext(typeof(LaPlaceDemonDataContext))]
    [Migration("20221117233213_first-migration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("laplacedemon.Models.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("LastUpdate")
                        .HasColumnType("DateTimeOffset")
                        .HasColumnName("LastUpdate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("NVARCHAR(800)")
                        .HasColumnName("Name");

                    b.Property<double>("Price")
                        .HasColumnType("Float")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.ToTable("Coin", (string)null);
                });

            modelBuilder.Entity("laplacedemon.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoinId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR(2000)")
                        .HasColumnName("Comment");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("DateTimeOffset")
                        .HasColumnName("Date");

                    b.Property<double>("SuggestedPrice")
                        .HasColumnType("Float")
                        .HasColumnName("SuggestedPrice");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("Title");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("isActive")
                        .HasColumnType("int")
                        .HasColumnName("IsActive");

                    b.Property<int>("likes")
                        .HasColumnType("int")
                        .HasColumnName("Likes");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.HasIndex("UserId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("laplacedemon.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("NickName");

                    b.Property<int>("analist")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("IsBloqued");

                    b.Property<string>("base64Photo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Base64Photo");

                    b.Property<int>("isBloqued")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("IsBloqued");

                    b.Property<int>("isExpert")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("IsBloqued");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("laplacedemon.Models.Post", b =>
                {
                    b.HasOne("laplacedemon.Models.Coin", "Coin")
                        .WithMany("Post")
                        .HasForeignKey("CoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Post_Coin");

                    b.HasOne("laplacedemon.Models.User", "User")
                        .WithMany("Post")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Post_User");

                    b.Navigation("Coin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("laplacedemon.Models.Coin", b =>
                {
                    b.Navigation("Post");
                });

            modelBuilder.Entity("laplacedemon.Models.User", b =>
                {
                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
